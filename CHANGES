Changes in version 1.3.0
------------------------
This is a compatibility release.  CAENHVWrapper version 5.x can
now be used with this source (previously supported version was 2.x),
on 32- and 64-bit architectures.

Being only a compatibility release, it comes with all of the
limitations and flaws of version 1.2 of this source code.  There
are some minor add-ons, and some minor restructuring was needed
to support the new wrapper.  

Version 2.x is still supported by setting CAENHVWrapperVERSION
appropriately in configure/RELEASE, presuming the OS supports
the 2.x libraries.  See libHVCAENx527App/doc/Installation.txt
for more details.

Also in this release, the software has been split into a library
build and an application build.  In accordance, iocsh commands
replace command line parametrization.  These allow for customization
of the records database with other modules (as well as linking
into other drivers, though this is not recommended).  In particular,
the HVSoftGroups records in this release can be added by specifying
the synApps calc module in configure/RELEASE.

Changes in version 1.2.3
------------------------
- added records to administer severity levels for current
- added software HV groups
- reduced priority of debug statements in scan loop

Changes in version 1.2.1
------------------------
- changed scan paradigm from PV-driven to Event-driven (with
   timers in driver)
- Burkard Kolb:
   - added calloc() failure protection
   - fixed memory leak for database entry with physically empty slot.
   - fixed crate initialization outside of crate loop
- Fixed bug that caused initialization to ignore all but first module,
- Fixed stack size bug in scan thread.
- added sanity checking on event number in device support
- added interlocks based on external PV

Changes in version 0.2
----------------------
In the IOC App:
- moved scan routine from sub record to driver
- added blocking for crate-bound commands, basically serializing
   communications with the crate.  This should reduce hang-ups
   and crashes, and also reduce frequency of screwball readings.
- changed SCAN type of many of the input db records from Periodic to Event.
   - Assigned Event# 11 to fast scan, Event# 12 to medium scan,
      Event# 13 to slow scan, and Event# 10 for manual update.  Manual
      update have not been implemented yet.
   - the driver then posts these events as respective timers dictate.
   - input records initiallize with the above Event# in their init()
      routines, if the value is > 0.
- scan period has been assigned for each Param for future use
