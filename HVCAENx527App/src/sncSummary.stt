program sncSummary

char pwchan[192];
char *prefix;
int i;
short sumoff;
short sumerr;
string channel;

string singlechan;
assign singlechan to "{P}:CHANLIST:ELEMENT";
int chanindex;
assign chanindex to "{P}:CHANLIST:ELEMENT.INDX";
short pwonoff;
assign pwonoff to "";
short status;
assign status to "";
int nord;
assign nord to "{P}:CHANLIST.NORD";
short sumpw;
assign sumpw to "{P}:CHANLIST:PWONOFF";
short sumstat;
assign sumstat to "{P}:CHANLIST:ERRORSTAT";

ss summarise_caen {
	state summarise {
	when (delay(1)) {
		prefix = macValueGet("P");
		sumoff = 1;
		sumerr = 0;
		pvGet(nord);
		if (nord == 0){
			sumoff = 0;
			sumerr = 1;
		}
		else
		{
		for(i=0;i<nord;i++)
		{
			chanindex = i;
			pvPut(chanindex);
			pvGet(singlechan);
			/*sscanf to strip whitespace*/
			sscanf(singlechan,"%s",channel);
			if (sumoff == 1) {
			sprintf(pwchan, "%s:%s:pwonoff", prefix, channel);
			pvAssign(pwonoff, pwchan);
			pvGet(pwonoff);
			if (pwonoff == 0) sumoff = 0;
			}
			if (sumerr == 0) {
			sprintf(pwchan, "%s:%s:status", prefix, singlechan);
			pvAssign(status, pwchan);
			pvGet(status);
			if (status >= 4) sumerr = 1;
			}
		}
		}
		sumpw = sumoff;
		pvPut(sumpw);
		sumstat = sumerr;
		pvPut(sumstat);
	} state summarise
}
}

